{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\test\\\\Final_project2\\\\final_project2\\\\src\\\\components\\\\Todoitem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todoitem = props => {\n  _s();\n  const [isEditClicked, setIsEditClicked] = useState(false); // 클릭을 했을때 변경\n  const [updatedText, setupdatedText] = useState(''); // 아이템 수정 하기\n\n  const submitEditedContent = () => {\n    if (updatedText === '') {\n      set;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item\",\n    children: [props.item, \"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: () => props.delete(props.item),\n      type: \"button\",\n      value: \"삭제하기\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: () => props.update(props.item),\n      type: \"button\",\n      value: \"수정하기\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this);\n};\n_s(Todoitem, \"TNFfibF0ky0elfEFX9K2ro58qQc=\");\n_c = Todoitem;\nexport default Todoitem;\nvar _c;\n$RefreshReg$(_c, \"Todoitem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todoitem","props","_s","isEditClicked","setIsEditClicked","updatedText","setupdatedText","submitEditedContent","set","className","children","item","onClick","delete","type","value","fileName","_jsxFileName","lineNumber","columnNumber","update","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/test/Final_project2/final_project2/src/components/Todoitem.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Todoitem = (props) => {\r\n\r\n    const [isEditClicked, setIsEditClicked] = useState(false);      // 클릭을 했을때 변경\r\n    const [updatedText,setupdatedText] = useState('');    // 아이템 수정 하기\r\n\r\n    const submitEditedContent = () => {\r\n        if (updatedText === '') {\r\n            set\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className='todo-item'>\r\n                {props.item}  {/* <= todolist에 있던 요소 출력 */} \r\n                <input onClick={()=>props.delete(props.item)} type='button' value={\"삭제하기\"} />\r\n                <input onClick={()=>props.update(props.item)} type='button' value={\"수정하기\"} />\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Todoitem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAM;EAChE,MAAM,CAACQ,WAAW,EAACC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAI;;EAEtD,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,IAAIF,WAAW,KAAK,EAAE,EAAE;MACpBG,GAAG;IACP;EACJ,CAAC;EAED,oBACQT,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrBT,KAAK,CAACU,IAAI,EAAC,IAAE,eACdZ,OAAA;MAAOa,OAAO,EAAEA,CAAA,KAAIX,KAAK,CAACY,MAAM,CAACZ,KAAK,CAACU,IAAI,CAAE;MAACG,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAE;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7EpB,OAAA;MAAOa,OAAO,EAAEA,CAAA,KAAIX,KAAK,CAACmB,MAAM,CAACnB,KAAK,CAACU,IAAI,CAAE;MAACG,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAE;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAElB,CAAC;AAACjB,EAAA,CAlBIF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}